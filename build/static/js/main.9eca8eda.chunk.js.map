{"version":3,"sources":["providers/AccountContext.jsx","components/Authorize.jsx","providers/AppContext.jsx","containers/loginContainer.jsx","localization/translate.jsx","components/login/Login.jsx","components/login/loginUi.jsx","components/login/index.jsx","providers/CommonDataContext.jsx","validator/PasswordValidator.js","containers/signupContainer.jsx","utils/Rules.js","svg/tickIcon.svg","components/signup/Signup.js","components/signup/SignupUI.js","components/signup/index.js","components/ForgotPassword/ForgotPasswordUI.jsx","components/ResetPassword/ResetPasswordUi.jsx","Main.jsx","localization/constants.js","localization/messages/en-US.js","localization/messages/fr-CA.js","localization/messages/index.js","localization/languageProvider.jsx","components/ResetPassword/index.jsx","app.js","index.js"],"names":["AccountContext","React","createContext","AccountProvider","props","useState","isAuthenticated","setIsAuth","console","log","webAuth","auth0","WebAuth","domain","config","auth0Domain","clientID","redirectUri","callbackURL","responseType","extraParams","response_type","scope","state","nonce","_csrf","audience","overrides","__tenant","auth0Tenant","Provider","value","otpStart","email","Promise","resolve","reject","variables","connection","send","passwordlessStart","err","res","otpLogin","otp","passwordlessLogin","verificationCode","window","origin","location","loginWithPassword","username","password","login","realm","authResult","SignupWithPassword","signup","AuthenticateUser","authToken","localStorage","setItem","storeUserData","data","JSON","stringify","getSocialLogin","name","authorize","children","Authorize","useContext","useEffect","hash","parseHash","clear","idTokenPayload","picture","id","sub","idToken","parseAuthToken","to","AppContext","AppProvider","whichPage","setWhichPage","LoginContainer","otpAvailable","isSubmitting","LoginForm","setLoginForm","isEmailError","databaseError","errorCode","LoginError","setLoginError","switchLogin","setToggle","Continue","setContinue","socialBtn","a","validateEmail","test","String","toLowerCase","onSubmit","e","preventDefault","description","code","getOtp","child","Children","only","cloneElement","onChange","target","onBlur","onToggle","onPressContinue","translate","values","Login","trackClickEvent","navElement","utag_data","utag","utagdata","link","className","style","flex","display","border","backgroundColor","borderRadius","type","placeholder","onClick","disabled","cursor","LoginUI","alt","src","view","tm_global_pagename","CommonDataContext","CommonDataProvider","connections","setConn","axios","get","filteredData","slice","jsonData","parse","DB_ARRAY","strategies","filter","item","getCommonData","charsets","require","validatePassword","rules","PasswordPolicyState","setPasswordPolicyState","setIsValid","length","copyObj","alphaNumericPolicy","PasswordPolicy","contains","expressions","upperCase","lowerCase","numbers","lengthPolicy","passwordPolicy","password_complexity_options","min_length","minLength","specialCharacterPolicy","specialCharacters","identicalLessThan2Characters","identicalChars","max","Non_empty_Password_Required","check","No_more_than_2_identical_characters_in_a_row","Length_Check","Special_characters","Lower_case_Upper_Case_Numbers","SignupContainer","isValid","passwordRules","setPasswordRules","confirmPassword","SignupForm","setSignupForm","SignupError","setSignupError","Rules","count","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","fill","SvgTickIcon","_ref","svgRef","title","titleId","width","height","viewBox","ref","ForwardRef","Signup","showPassword","setShowPassword","displayRules","setDisplayRules","ruleMap","displayablerule","getKeys","push","marginTop","color","onFocus","map","index","fontWeight","SignupUI","ForgotPasswordUI","emailError","databaseMessage","emailDetails","updateEmailDetails","sendForgotPasswordLink","emailVal","prevEmailDetails","updatedEmailDetails","handleEmailMe","ResetPasswordUi","Main","returnPage","LOCALES","en","Welcome_back_to","emailAddress","signIn","choose_your_signIn_method_continue","Enter_your_email_address_so_we_can_find_your_account","or","signIn_with_password","one_time_passcode","Sign_in_with_a_onetime_passcode","continue","access_denied","too_many_attempts","Welcome_to_dashboard","invalid_request","unauthorized_client","unsupported_credential_type","blocked_user","password_leaked","or_Signin_with","Do_not_have_an_account","invalid_user_password","invalid_captcha","invalid_recaptcha","Enter_your_email_address_set_password_and_well_get_your_account_created","Already_have_a_account","confirm_password","Request_one_time_passcode","fr","unsupported_credential_typ","messages","LanguageProvider","locale","textComponent","Fragment","ResetPassword","App","pageConfig","parsedHash","URLSearchParams","substr","useLocation","pathname","sessionStorage","search","lang","query","useRef","culture","getItem","current","path","exact","component","LoginWidget","opts","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eca8eda.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport auth0 from \"auth0-js\";\r\n\r\nconst AccountContext = React.createContext({});\r\n\r\nconst AccountProvider = (props) => {\r\n  const [isAuthenticated, setIsAuth] = useState(false);\r\n\r\n  const AuthenticateUser = (authToken) => {\r\n    localStorage.setItem(\"auth_token\", authToken);\r\n    setIsAuth(true);\r\n  };\r\n\r\n  const storeUserData = (data) => {\r\n    localStorage.setItem(\"userData\", JSON.stringify(data));\r\n  };\r\n  console.log(\"configs\", props);\r\n  const webAuth = new auth0.WebAuth({\r\n    domain: props.config.auth0Domain,\r\n    clientID: props.config.clientID,\r\n    redirectUri: props.config.callbackURL,\r\n    responseType: props.config.extraParams.response_type,\r\n    scope: props.config.extraParams.scope,\r\n    state: props.config.extraParams.state,\r\n    nonce: props.config.extraParams.nonce,\r\n    _csrf: props.config.extraParams._csrf,\r\n    audience: props.config.extraParams.audience,\r\n    overrides: { __tenant: props.config.auth0Tenant },\r\n  });\r\n  // const webAuth = new auth0.WebAuth({\r\n  //   domain: process.env.REACT_APP_AUTH0_DOMAIN,\r\n  //   clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n  //   responseType: \"token id_token\",\r\n  //   redirectUri: \"http://localhost:4040/authorize\",\r\n  // });\r\n  const getSocialLogin = (name) => {\r\n    return new Promise((resolve, reject) => {\r\n      webAuth.authorize(\r\n        {\r\n          connection: name,\r\n        },\r\n        (err, res) => {\r\n          if (err) {\r\n            console.log(err);\r\n            reject(err);\r\n          } else {\r\n            resolve(res);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const SignupWithPassword = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      const variables = {\r\n        connection: \"Test-CustomDB\",\r\n        email,\r\n        password,\r\n      };\r\n      webAuth.signup(variables, (err, authResult) => {\r\n        if (err) {\r\n          console.log(err);\r\n          reject(err);\r\n          return;\r\n        }\r\n        if (authResult) {\r\n          window.origin = window.location.origin;\r\n          resolve(authResult);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const otpStart = (email) => {\r\n    return new Promise((resolve, reject) => {\r\n      const variables = { email, connection: \"email\", send: \"code\" };\r\n      webAuth.passwordlessStart(variables, (err, res) => {\r\n        if (err) {\r\n          console.log(err);\r\n          reject(err);\r\n        } else {\r\n          resolve(res);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const otpLogin = (email, otp) => {\r\n    return new Promise((resolve, reject) => {\r\n      webAuth.passwordlessLogin(\r\n        { email, connection: \"email\", verificationCode: otp },\r\n        (err, res) => {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            window.origin = window.location.origin;\r\n            resolve(res);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const loginWithPassword = (username, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      webAuth.login(\r\n        {\r\n          realm: \"Test-CustomDB\",\r\n          username,\r\n          password,\r\n        },\r\n        (err, authResult) => {\r\n          if (err) {\r\n            console.log(err);\r\n            reject(err);\r\n            return;\r\n          }\r\n          if (authResult) {\r\n            window.origin = window.location.origin;\r\n            resolve(authResult);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        webAuth,\r\n        otpStart,\r\n        otpLogin,\r\n        loginWithPassword,\r\n        SignupWithPassword,\r\n        AuthenticateUser,\r\n        storeUserData,\r\n        isAuthenticated,\r\n        getSocialLogin,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AccountProvider, AccountContext };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AccountContext } from \"../providers/AccountContext\";\r\n\r\nconst Authorize = (props) => {\r\n    const { isAuthenticated, storeUserData, AuthenticateUser, webAuth } =\r\n        useContext(AccountContext);\r\n\r\n    const parseAuthToken = () => {\r\n        if (window.location.hash) {\r\n            webAuth.parseHash(\r\n                {\r\n                    hash: window.location.hash,\r\n                    state: props?.config?.state,\r\n                    nonce: props?.config?.extraParams?.nonce,\r\n                },\r\n                (err, res) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                        localStorage.clear();\r\n                        return;\r\n                    }\r\n\r\n                    const {\r\n                        email,\r\n                        name,\r\n                        picture,\r\n                        sub: id,\r\n                    } = res.idTokenPayload;\r\n                    storeUserData({ email, name, picture, id });\r\n                    AuthenticateUser(res.idToken);\r\n                }\r\n            );\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        parseAuthToken();\r\n    }, []);\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return <div>Loading....</div>;\r\n};\r\n\r\nexport default Authorize;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AppContext = React.createContext({});\r\n\r\nconst AppProvider = (props) => {\r\n  const [whichPage, setWhichPage] = useState(\"login-page\");\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        whichPage,\r\n        setWhichPage,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppProvider, AppContext };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../providers/AccountContext\";\r\nexport default function LoginContainer(props) {\r\n    const { loginWithPassword, otpLogin, otpStart, getSocialLogin } =\r\n        useContext(AccountContext);\r\n\r\n    const [LoginForm, setLoginForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        otp: \"\",\r\n        otpAvailable: false,\r\n        isSubmitting: false,\r\n    });\r\n    const [LoginError, setLoginError] = useState({\r\n        email: \"\",\r\n        isEmailError: \"\",\r\n        databaseError: \"\",\r\n        errorCode: \"\",\r\n    });\r\n    const [switchLogin, setToggle] = useState(false);\r\n\r\n    const [Continue, setContinue] = useState(false);\r\n\r\n    const onToggle = () => {\r\n        setToggle(!switchLogin);\r\n        setLoginError({\r\n            ...LoginError,\r\n            email: \"\",\r\n            databaseError: \"\",\r\n            errorCode: \"\",\r\n        });\r\n    };\r\n    const onPressContinue = () => {\r\n        setContinue(true);\r\n    };\r\n    const socialBtn = async (name) => {\r\n        try {\r\n            await getSocialLogin(name);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    const validateEmail = (email) => {\r\n        const re =\r\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n    const onBlur = (e) => {\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                if (!e.target.value) {\r\n                    setLoginError({\r\n                        ...LoginError,\r\n                        isEmailError: true,\r\n                        [e.target.name]: \"Email is required\",\r\n                    });\r\n                } else if (e.target.value && !validateEmail(e.target.value)) {\r\n                    setLoginError({\r\n                        ...LoginError,\r\n                        isEmailError: true,\r\n                        [e.target.name]: \"Email is not valid\",\r\n                    });\r\n                } else {\r\n                    setLoginError({\r\n                        ...LoginError,\r\n                        isEmailError: false,\r\n                        [e.target.name]: \"\",\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setLoginForm({\r\n            ...LoginForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        onBlur(e);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        setLoginForm({\r\n            ...LoginForm,\r\n            isSubmitting: true,\r\n        });\r\n\r\n        e.preventDefault();\r\n        if (!switchLogin) {\r\n            try {\r\n                await loginWithPassword(LoginForm.email, LoginForm.password);\r\n                setLoginError({\r\n                    ...LoginError,\r\n                    databaseError: \"\",\r\n                });\r\n                setLoginForm({\r\n                    ...LoginForm,\r\n                    isSubmitting: false,\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n                setLoginForm({\r\n                    ...LoginForm,\r\n                    isSubmitting: false,\r\n                });\r\n                setLoginError({\r\n                    ...LoginError,\r\n                    databaseError: err.description,\r\n                    errorCode: err.code,\r\n                });\r\n            }\r\n        } else {\r\n            try {\r\n                if (LoginForm.otpAvailable) {\r\n                    await otpLogin(LoginForm.email, LoginForm.otp);\r\n                    setLoginForm({\r\n                        ...LoginForm,\r\n                        isSubmitting: false,\r\n                    });\r\n                } else {\r\n                    await otpStart(LoginForm.email);\r\n                    setLoginForm({\r\n                        ...LoginForm,\r\n                        isSubmitting: false,\r\n                    });\r\n                    setLoginForm({\r\n                        ...LoginForm,\r\n                        otpAvailable: true,\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                setLoginForm({\r\n                    ...LoginForm,\r\n                    isSubmitting: false,\r\n                });\r\n                setLoginError({\r\n                    ...LoginError,\r\n                    databaseError: err.description,\r\n                    errorCode: err.code,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const getOtp = async () => {\r\n        try {\r\n            setToggle(!switchLogin);\r\n            await otpStart(LoginForm.email);\r\n            setLoginForm({\r\n                ...LoginForm,\r\n                otpAvailable: true,\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoginError({\r\n                ...LoginError,\r\n                databaseError: err.description,\r\n                errorCode: err.code,\r\n            });\r\n        }\r\n    };\r\n\r\n    const child = React.Children.only(props.children);\r\n    return React.cloneElement(child, {\r\n        ...props,\r\n        onChange,\r\n        onToggle,\r\n        switchLogin,\r\n        onSubmit,\r\n        LoginForm,\r\n        LoginError,\r\n        Continue,\r\n        validateEmail,\r\n        onPressContinue,\r\n        getOtp,\r\n        socialBtn,\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst translate = (id, value = {}) => (\r\n    <FormattedMessage id={id} values={{ ...value }} />\r\n);\r\n\r\nexport default translate;\r\n","import React , {useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport translate from \"../../localization/translate\";\r\nimport { AppContext } from \"../../providers/AppContext\";\r\nimport { AiOutlineMail } from \"react-icons/ai\";\r\nimport { MdLockOutline } from \"react-icons/md\";\r\n// import SocialButtons from \"./socialLogin\";\r\n\r\nconst Login = (props) => {\r\n  const {\r\n    onChange,\r\n    switchLogin,\r\n    onSubmit,\r\n    LoginError,\r\n    LoginForm,\r\n    onToggle,\r\n    validateEmail,\r\n    // getOtp,\r\n    // socialBtn,\r\n  } = props;\r\n  const { setWhichPage } = useContext(AppContext);\r\n   \r\n  const trackClickEvent = async (navElement) => {\r\n    let utag_data = window.utag_data;\r\n    let utag = window.utag;\r\n    let utagdata = { ...utag_data };\r\n    utagdata[\"tm_global_tealium_calltype\"] = \"manual\";\r\n    utagdata[\"tm_global_navigation_element\"] = navElement;\r\n    utagdata[\"tm_global_navigation_element_click\"] = \"true\";\r\n    utag.link(utagdata);\r\n  };\r\n\r\n  const handleForgotPasswordClick = (e) => {\r\n    e.preventDefault()\r\n    setWhichPage(\"forgotPassword-page\");\r\n\r\n  }\r\n  return (\r\n    <div className=\"LoginWrapperContainer\">\r\n      <form className=\"LoginInputWrapper\">\r\n        {!switchLogin && (\r\n          <div className=\"LoginInputContainer\">\r\n            {LoginForm.email !== \"\" ? (\r\n              <div className=\"LoginInputLabel\">{translate(\"emailAddress\")}</div>\r\n            ) : null}\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                display: \"flex\",\r\n                border:\r\n                  LoginError.isEmailError === true\r\n                    ? \"2px solid red\"\r\n                    : LoginError.isEmailError === false\r\n                    ? \"2px solid green\"\r\n                    : \"\",\r\n                backgroundColor: \"#ffff\",\r\n                borderRadius: \"1rem\",\r\n              }}\r\n            >\r\n              <AiOutlineMail className=\"LoginInputLogo\" />\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={LoginForm.email}\r\n                placeholder=\"Email\"\r\n                className=\"LoginInput\"\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {LoginError.email && <div className=\"Error\">{LoginError.email}</div>}\r\n        {!switchLogin && (\r\n          <>\r\n            <div className=\"LoginPasswordContainer\">\r\n              {LoginForm.password !== \"\" ? (\r\n                <div className=\"LoginInputLabel\">{translate(\"password\")}</div>\r\n              ) : null}\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  borderRadius: \"1rem\",\r\n                  backgroundColor: \"#ffff\",\r\n                }}\r\n              >\r\n                <MdLockOutline className=\"LoginInputLogo\" />\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"LoginInput\"\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"forgotPasswordContainer\">\r\n              <button className=\"forgotPassword\" onClick={handleForgotPasswordClick}>Forgot password?</button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {switchLogin && LoginForm.otpAvailable && (\r\n          <>\r\n            <div className=\"LoginInputContainer\">\r\n              <div className=\"LoginInputLabel\">\r\n                {translate(\"one_time_passcode\")}\r\n              </div>\r\n              <input\r\n                id=\"otp\"\r\n                name=\"otp\"\r\n                className=\"LoginInput\"\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        <button\r\n          className=\"RequestOtp\"\r\n          onClick={(e) => onSubmit(e) && trackClickEvent(\"continue-auth0\")}\r\n          disabled={!validateEmail(LoginForm.email) || LoginForm.isSubmitting}\r\n          style={{\r\n            backgroundColor:\r\n              !validateEmail(LoginForm.email) || LoginForm.isSubmitting\r\n                ? \"gray\"\r\n                : \"\",\r\n            cursor: LoginForm.isSubmitting ? \"progress\" : \"pointer\",\r\n          }}\r\n        >\r\n          {!switchLogin ? (\r\n            <div>{translate(\"signIn\")}</div>\r\n          ) : LoginForm.otpAvailable ? (\r\n            <div>{translate(\"signIn\")}</div>\r\n          ) : (\r\n            <div>{translate(\"Request_one_time_passcode\")}</div>\r\n          )}\r\n          {/* <div>{translate(\"signIn\")}</div> */}\r\n        </button>\r\n      </form>\r\n      {LoginError.errorCode && (\r\n        <div className=\"Error\">{translate(LoginError.errorCode)}</div>\r\n      )}\r\n\r\n      <div className=\"SwitchContainer\">\r\n        <div className=\"Switch\">{translate(\"or\")}</div>\r\n\r\n        {!switchLogin && (\r\n          <button className=\"SwitchBtn\" onClick={onToggle}>\r\n            <div>{translate(\"Sign_in_with_a_onetime_passcode\")}</div>\r\n          </button>\r\n        )}\r\n        {switchLogin && (\r\n          <button className=\"SwitchBtn\" onClick={onToggle}>\r\n            <div>{translate(\"signIn_with_password\")}</div>\r\n          </button>\r\n        )}\r\n        {/* {!switchLogin && (\r\n                    <button className=\"SwitchBtn\" onClick={getOtp}>\r\n                        <div>\r\n                            {translate(\"Sign_in_with_a_onetime_passcode\")}\r\n                        </div>\r\n                    </button>\r\n                )}\r\n                {switchLogin && (\r\n                    <button className=\"SwitchBtn\" onClick={onToggle}>\r\n                        <div>{translate(\"signIn_with_password\")}</div>\r\n                    </button>\r\n                )} */}\r\n      </div>\r\n      {/* <SocialButtons socialBtn={socialBtn} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../providers/AppContext\";\r\nimport \"./style.css\";\r\nimport Login from \"./Login\";\r\nimport translate from \"../../localization/translate\";\r\n\r\nconst LoginUI = (props) => {\r\n    const {\r\n        onChange,\r\n        switchLogin,\r\n        onToggle,\r\n        onSubmit,\r\n        LoginError,\r\n        LoginForm,\r\n        validateEmail,\r\n        Continue,\r\n        onPressContinue,\r\n        getOtp,\r\n        socialBtn,\r\n    } = props;\r\n    const { setWhichPage } = useContext(AppContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"LoginContainer\">\r\n                <div className=\"LoginLeftWrapper\">\r\n                    <div className=\"LoginWelcomeContainer\">\r\n                        <img\r\n                            alt=\"McAfeeLogo\"\r\n                            className=\"LoginPageLogo\"\r\n                            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\r\n                        />\r\n                        <div className=\"LoginIntro\">\r\n                            {translate(\"Welcome_back_to\")} McAfee !!\r\n                        </div>\r\n                        <div className=\"LoginIntroSubHeading\">\r\n                            {translate(\"choose_your_signIn_method_continue\")}\r\n                        </div>\r\n                        <div className=\"LoginBottomHeading\">\r\n                            <div>{translate(\"Do_not_have_an_account\")}</div>\r\n                            <div\r\n                                className=\"Login-page-link\"\r\n                                onClick={() => {\r\n                                    setWhichPage(\"signup-page\");\r\n                                }}\r\n                            >\r\n                                Create one now\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"LoginRightWrapper\">\r\n                    <Login\r\n                        LoginError={LoginError}\r\n                        onChange={onChange}\r\n                        switchLogin={switchLogin}\r\n                        onSubmit={onSubmit}\r\n                        LoginForm={LoginForm}\r\n                        onToggle={onToggle}\r\n                        onPressContinue={onPressContinue}\r\n                        Continue={Continue}\r\n                        getOtp={getOtp}\r\n                        validateEmail={validateEmail}\r\n                        socialBtn={socialBtn}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginUI;\r\n","import React, { useEffect } from \"react\";\r\nimport LoginContainer from \"../../containers/loginContainer\";\r\nimport LoginUI from \"./loginUi\";\r\n\r\nconst Login = (props) => {\r\n  useEffect(() => {\r\n    let utag_data = window.utag_data;\r\n    let utag = window.utag;\r\n    utag.view({ ...utag_data, tm_global_pagename: \"Login-React\" });\r\n  }, []);\r\n  return (\r\n    <LoginContainer {...props}>\r\n      <LoginUI />\r\n    </LoginContainer>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CommonDataContext = React.createContext({});\r\n\r\nconst CommonDataProvider = (props) => {\r\n  const [connections, setConn] = useState([]);\r\n  useEffect(() => {\r\n    const getCommonData = async () => {\r\n      const res = await axios.get(\r\n        `https://${props.config.auth0Domain}/client/${props.config.clientID}.js`\r\n      );\r\n      const data = res.data;\r\n      if (typeof data === \"string\") {\r\n        const filteredData = data.slice(16, -2);\r\n        const jsonData = JSON.parse(filteredData);\r\n        const DB_ARRAY = jsonData?.strategies[0]?.connections.filter(\r\n          (item) => item.name === \"Test-CustomDB\"\r\n        );\r\n        console.log(\"DB ARRAY RECIVED\", DB_ARRAY);\r\n        setConn(DB_ARRAY);\r\n      }\r\n    };\r\n    getCommonData();\r\n  }, []);\r\n  return (\r\n    <CommonDataContext.Provider value={{ connections }}>\r\n      {props.children}\r\n    </CommonDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CommonDataProvider, CommonDataContext };\r\n","import PasswordPolicy from \"password-sheriff/lib/policy\";\r\nconst charsets = require(\"password-sheriff\").charsets;\r\n\r\nexport const AlphaNumericCheck = () => {\r\n    const alphaNumericPolicy = new PasswordPolicy({\r\n        contains: {\r\n            expressions: [\r\n                charsets.upperCase,\r\n                charsets.lowerCase,\r\n                charsets.numbers,\r\n            ],\r\n        },\r\n    });\r\n    return alphaNumericPolicy;\r\n};\r\n\r\nexport const PasswordLengthWise = (length) => {\r\n    const lengthPolicy = new PasswordPolicy({\r\n        length: { minLength: length },\r\n    });\r\n    return lengthPolicy;\r\n};\r\n\r\nexport const SpecialCharacterPolicy = () => {\r\n    const specialCharacterPolicy = new PasswordPolicy({\r\n        contains: {\r\n            expressions: [charsets.specialCharacters],\r\n        },\r\n    });\r\n    return specialCharacterPolicy;\r\n};\r\n\r\nexport const IdenticalCharacters = () => {\r\n    var identicalCharsPolicy = new PasswordPolicy({\r\n        identicalChars: {\r\n            max: 2,\r\n        },\r\n    });\r\n    return identicalCharsPolicy;\r\n};\r\n\r\nexport const validatePassword = (\r\n    rules,\r\n    value,\r\n    PasswordPolicyState,\r\n    setPasswordPolicyState,\r\n    setIsValid\r\n) => {\r\n    const copyObj = {\r\n        ...PasswordPolicyState,\r\n    };\r\n    const alphaNumericPolicy = AlphaNumericCheck();\r\n    const lengthPolicy =\r\n        rules.passwordPolicy !== \"none\"\r\n            ? PasswordLengthWise(rules?.password_complexity_options?.min_length)\r\n            : null;\r\n    const specialCharacterPolicy = SpecialCharacterPolicy();\r\n    const identicalLessThan2Characters = IdenticalCharacters();\r\n\r\n    switch (rules.passwordPolicy) {\r\n        case \"excellent\":\r\n            setIsValid(true);\r\n            if (value !== \"\") {\r\n                copyObj.Non_empty_Password_Required = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Non_empty_Password_Required = false;\r\n            }\r\n            if (identicalLessThan2Characters.check(value)) {\r\n                copyObj.No_more_than_2_identical_characters_in_a_row = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.No_more_than_2_identical_characters_in_a_row = false;\r\n            }\r\n            if (lengthPolicy.check(value)) {\r\n                copyObj.Length_Check = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Length_Check = false;\r\n            }\r\n            if (specialCharacterPolicy.check(value)) {\r\n                copyObj.Special_characters = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Special_characters = false;\r\n            }\r\n\r\n            if (alphaNumericPolicy.check(value)) {\r\n                copyObj.Lower_case_Upper_Case_Numbers = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Lower_case_Upper_Case_Numbers = false;\r\n            }\r\n            break;\r\n        case \"good\":\r\n            setIsValid(true);\r\n            if (value !== \"\") {\r\n                copyObj.Non_empty_Password_Required = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Non_empty_Password_Required = false;\r\n            }\r\n            if (lengthPolicy.check(value)) {\r\n                copyObj.Length_Check = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Length_Check = false;\r\n            }\r\n            if (specialCharacterPolicy.check(value)) {\r\n                copyObj.Special_characters = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Special_characters = false;\r\n            }\r\n            if (alphaNumericPolicy.check(value)) {\r\n                copyObj.Lower_case_Upper_Case_Numbers = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Lower_case_Upper_Case_Numbers = false;\r\n            }\r\n            break;\r\n        case \"fair\":\r\n            setIsValid(true);\r\n            if (value !== \"\") {\r\n                copyObj.Non_empty_Password_Required = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Non_empty_Password_Required = false;\r\n            }\r\n            if (lengthPolicy.check(value)) {\r\n                copyObj.Length_Check = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Length_Check = false;\r\n            }\r\n            if (alphaNumericPolicy.check(value)) {\r\n                copyObj.Lower_case_Upper_Case_Numbers = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Lower_case_Upper_Case_Numbers = false;\r\n            }\r\n            break;\r\n        case \"low\":\r\n            setIsValid(true);\r\n            if (value !== \"\") {\r\n                copyObj.Non_empty_Password_Required = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Non_empty_Password_Required = false;\r\n            }\r\n            if (lengthPolicy.check(value)) {\r\n                copyObj.Length_Check = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Length_Check = false;\r\n            }\r\n            break;\r\n        case null:\r\n            setIsValid(true);\r\n            if (value !== \"\") {\r\n                copyObj.Non_empty_Password_Required = true;\r\n            } else {\r\n                setIsValid(false);\r\n                copyObj.Non_empty_Password_Required = false;\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    setPasswordPolicyState(copyObj);\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../providers/AccountContext\";\r\nimport { CommonDataContext } from \"../providers/CommonDataContext\";\r\nimport { validatePassword } from \"../validator/PasswordValidator\";\r\n\r\nexport default function SignupContainer(props) {\r\n    const { SignupWithPassword, loginWithPassword } =\r\n        useContext(AccountContext);\r\n    const { connections } = useContext(CommonDataContext);\r\n\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [passwordRules, setPasswordRules] = useState(null);\r\n    const [SignupForm, setSignupForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [PasswordPolicyState, setPasswordPolicyState] = useState({\r\n        No_more_than_2_identical_characters_in_a_row: false,\r\n        Special_characters: false,\r\n        Lower_case_Upper_Case_Numbers: false,\r\n        Length_Check: false,\r\n        Non_empty_Password_Required: false,\r\n    });\r\n    const [SignupError, setSignupError] = useState({\r\n        email: \"\",\r\n        isEmailError: \"\",\r\n        databaseError: \"\",\r\n        errorCode: \"\",\r\n    });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            SignupForm.email !== \"\" &&\r\n            SignupForm.password !== \"\" &&\r\n            SignupForm.confirmPassword !== \"\" &&\r\n            SignupForm.password === SignupForm.confirmPassword\r\n        ) {\r\n            try {\r\n                const res = await SignupWithPassword(\r\n                    SignupForm.email,\r\n                    SignupForm.password\r\n                );\r\n                if (res.email) {\r\n                    await loginWithPassword(\r\n                        SignupForm.email,\r\n                        SignupForm.password\r\n                    );\r\n                }\r\n            } catch (e) {\r\n                setSignupError({\r\n                    ...SignupError,\r\n                    databaseError: e.description,\r\n                    errorCode: e.code,\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"enter details\");\r\n        }\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        setPasswordRules(connections[0]);\r\n    };\r\n    const onChange = (e) => {\r\n        if (e.target.name === \"password\" && passwordRules) {\r\n            validatePassword(\r\n                passwordRules,\r\n                e.target.value,\r\n                PasswordPolicyState,\r\n                setPasswordPolicyState,\r\n                setIsValid\r\n            );\r\n        }\r\n        setSignupForm({\r\n            ...SignupForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const child = React.Children.only(props.children);\r\n    return React.cloneElement(child, {\r\n        onSubmit,\r\n        SignupForm,\r\n        onChange,\r\n        onClick,\r\n        passwordRules,\r\n        PasswordPolicyState,\r\n        isValid,\r\n        SignupError,\r\n    });\r\n}\r\n","function Rules({ count }) {\r\n  const Rules = {\r\n    No_more_than_2_identical_characters_in_a_row:\r\n      \"No more than 2 identical characters in a row\",\r\n    Special_characters: \"Special characters (!@#$%^&*)\",\r\n    Lower_case_Upper_Case_Numbers:\r\n      \"Lower case (a-z), upper case (A-Z) and numbers (0-9)\",\r\n    Length_Check: `Must have ${count} characters in length`,\r\n    Non_empty_Password_Required: \"Non-empty Password Required\",\r\n  };\r\n  return Rules;\r\n}\r\n\r\nexport default Rules;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 22.7812C17.5228 22.7812 22 18.3041 22 12.7812C22 7.2584 17.5228 2.78125 12 2.78125C6.47715 2.78125 2 7.2584 2 12.7812C2 18.3041 6.47715 22.7812 12 22.7812ZM17.7241 9.47091L10.3333 17.2312L6.27586 12.9709L7.72414 11.5916L10.3333 14.3312L16.2759 8.09159L17.7241 9.47091Z\",\n  fill: \"#0CA77D\"\n});\n\nfunction SvgTickIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 25,\n    viewBox: \"0 0 24 25\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTickIcon);\nexport default __webpack_public_path__ + \"static/media/tickIcon.4e59dada.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { AiOutlineMail } from \"react-icons/ai\";\r\nimport { MdLockOutline } from \"react-icons/md\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport Rules from \"../../utils/Rules\";\r\nimport { MdOutlineCancel } from \"react-icons/md\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { ReactComponent as TickIcon } from \"../../svg/tickIcon.svg\";\r\nimport translate from \"../../localization/translate\";\r\n\r\nconst Signup = (props) => {\r\n    const {\r\n        onSubmit,\r\n        SignupForm,\r\n        onChange,\r\n        passwordRules,\r\n        PasswordPolicyState,\r\n        onClick,\r\n        isValid,\r\n        SignupError,\r\n    } = props;\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [displayRules, setDisplayRules] = useState(false);\r\n    const ruleMap =\r\n        passwordRules &&\r\n        Rules({\r\n            count: passwordRules?.password_complexity_options?.min_length,\r\n        });\r\n    const displayablerule = [];\r\n    const getKeys = [];\r\n    if (passwordRules?.passwordPolicy === \"good\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (key !== \"No_more_than_2_identical_characters_in_a_row\") {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"excellent\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            getKeys.push(key);\r\n            displayablerule.push(ruleMap[key]);\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"fair\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (\r\n                key !== \"No_more_than_2_identical_characters_in_a_row\" ||\r\n                key !== \"Special_characters\"\r\n            ) {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"low\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (\r\n                key !== \"No_more_than_2_identical_characters_in_a_row\" ||\r\n                key !== \"Special_characters\" ||\r\n                key !== \"Lower_case_Upper_Case_Numbers\"\r\n            ) {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === null) {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (key === \"Non_empty_Password_Required\") {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <form className=\"InputWrapper\">\r\n                <>\r\n                    {SignupForm.email !== \"\" ? (\r\n                        <div className=\"InputLabel\">\r\n                            {translate(\"emailAddress\")}\r\n                        </div>\r\n                    ) : null}\r\n                    <div\r\n                        className=\"InputAndLogoSignup\"\r\n                        // style={{\r\n                        //   border:\r\n                        //     LoginError.isEmailError === true\r\n                        //       ? \"2px solid red\"\r\n                        //       : LoginError.isEmailError === false\r\n                        //       ? \"2px solid green\"\r\n                        //       : \"\",\r\n                        // }}\r\n                    >\r\n                        <AiOutlineMail\r\n                            style={{\r\n                                height: \"2rem\",\r\n                                width: \"2rem\",\r\n                                marginTop: \"0.5rem\",\r\n                                color: \"rgb(175, 174, 174)\",\r\n                            }}\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={SignupForm.email}\r\n                            placeholder=\"Email\"\r\n                            className=\"Input\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        {SignupForm.password !== \"\" ? (\r\n                            <div\r\n                                className=\"InputLabelPass\"\r\n                                style={{\r\n                                    color: isValid\r\n                                        ? \"#0CA77D\"\r\n                                        : \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            >\r\n                                {translate(\"password\")}\r\n                            </div>\r\n                        ) : null}\r\n                        <div\r\n                            className=\"InputAndLogoSignup\"\r\n                            // style={{\r\n                            //   border:\r\n                            //     LoginError.isEmailError === true\r\n                            //       ? \"2px solid red\"\r\n                            //       : LoginError.isEmailError === false\r\n                            //       ? \"2px solid green\"\r\n                            //       : \"\",\r\n                            // }}\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    isValid ? \"#0CA77D\" : \"RGB(212, 213, 219)\"\r\n                                }`,\r\n                            }}\r\n                        >\r\n                            <MdLockOutline\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                value={SignupForm.password}\r\n                                placeholder=\"Password\"\r\n                                className=\"Input\"\r\n                                onChange={onChange}\r\n                                onFocus={() => {\r\n                                    onClick();\r\n                                    setDisplayRules(true);\r\n                                }}\r\n                                onBlur={() => setDisplayRules(false)}\r\n                            />\r\n                            <AiFillEye\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => {\r\n                                    showPassword\r\n                                        ? setShowPassword(false)\r\n                                        : setShowPassword(true);\r\n                                }}\r\n                            />\r\n                            {isValid ? (\r\n                                <TickIcon\r\n                                    style={{\r\n                                        height: \"2rem\",\r\n                                        width: \"2rem\",\r\n                                        marginTop: \"0.5rem\",\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {displayRules ? (\r\n                            <>\r\n                                <div className=\"Password-rules\">\r\n                                    {displayablerule.map((item, index) => {\r\n                                        return (\r\n                                            <div className=\"Rule\">\r\n                                                {\" \"}\r\n                                                <div className=\"checkbox\">\r\n                                                    {PasswordPolicyState[\r\n                                                        getKeys[index]\r\n                                                    ] ? (\r\n                                                        <TiTick className=\"tick\" />\r\n                                                    ) : (\r\n                                                        <MdOutlineCancel className=\"cancel\" />\r\n                                                    )}\r\n                                                </div>\r\n                                                {item}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            console.log(\"not going inside that\")\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        {SignupForm.confirmPassword !== \"\" ? (\r\n                            <div\r\n                                className=\"InputLabelCPass\"\r\n                                style={{\r\n                                    color:\r\n                                        SignupForm.password ===\r\n                                            SignupForm.confirmPassword &&\r\n                                        SignupForm.confirmPassword !== \"\"\r\n                                            ? \"#0CA77D\"\r\n                                            : \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            >\r\n                                {translate(\"confirm_password\")}\r\n                            </div>\r\n                        ) : null}\r\n                        <div\r\n                            className=\"InputAndLogoSignup\"\r\n                            // style={{\r\n                            //   border:\r\n                            //     LoginError.isEmailError === true\r\n                            //       ? \"2px solid red\"\r\n                            //       : LoginError.isEmailError === false\r\n                            //       ? \"2px solid green\"\r\n                            //       : \"\",\r\n                            // }}\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    SignupForm.password ===\r\n                                        SignupForm.confirmPassword &&\r\n                                    SignupForm.confirmPassword !== \"\"\r\n                                        ? \"#0CA77D\"\r\n                                        : \"RGB(212, 213, 219)\"\r\n                                }`,\r\n                            }}\r\n                        >\r\n                            <MdLockOutline\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"confirmPassword\"\r\n                                name=\"confirmPassword\"\r\n                                value={SignupForm.confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                                className=\"Input\"\r\n                                onChange={onChange}\r\n                                onBlur={() => setDisplayRules(false)}\r\n                            />\r\n                            <AiFillEye\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.7rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => {\r\n                                    showPassword\r\n                                        ? setShowPassword(false)\r\n                                        : setShowPassword(true);\r\n                                }}\r\n                            />\r\n                            {SignupForm.password ===\r\n                                SignupForm.confirmPassword &&\r\n                            SignupForm.confirmPassword !== \"\" ? (\r\n                                <TickIcon\r\n                                    style={{\r\n                                        height: \"2rem\",\r\n                                        width: \"2rem\",\r\n                                        marginTop: \"0.5rem\",\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                    {SignupError.errorCode && (\r\n                        <div className=\"Error\">\r\n                            {translate(SignupError.errorCode)}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"PolicyLink\">\r\n                        <p>\r\n                            {\" \"}\r\n                            By clicking{\" \"}\r\n                            <span style={{ fontWeight: \"bold\" }}>\r\n                                Create my account\r\n                            </span>\r\n                            , you accept\r\n                            <span style={{ color: \"rgb(66, 88, 255)\" }}>\r\n                                McAfee’s License <br />\r\n                                Agreement\r\n                            </span>{\" \"}\r\n                            and\r\n                            <span style={{ color: \"rgb(66, 88, 255)\" }}>\r\n                                {\" \"}\r\n                                Privacy Notice\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <button\r\n                        className={\r\n                            SignupForm.email !== \"\" &&\r\n                            SignupForm.password !== \"\" &&\r\n                            SignupForm.confirmPassword !== \"\"\r\n                                ? \"SubmitButtonActive\"\r\n                                : \"SubmitButton\"\r\n                        }\r\n                        onClick={onSubmit}\r\n                    >\r\n                        <div>Create My Account</div>\r\n                    </button>\r\n                </>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../providers/AppContext\";\r\nimport Signup from \"./Signup\";\r\nimport \"./style.css\";\r\nimport translate from \"../../localization/translate\";\r\n\r\nconst SignupUI = (props) => {\r\n  const {\r\n    onSubmit,\r\n    SignupForm,\r\n    onChange,\r\n    onClick,\r\n    passwordRules,\r\n    PasswordPolicyState,\r\n    isValid,\r\n    SignupError,\r\n  } = props;\r\n  const { setWhichPage } = useContext(AppContext);\r\n  return (\r\n    <>\r\n      <div className=\"SignupWrapper\">\r\n        <div className=\"leftContainer\">\r\n          <img\r\n            alt=\"McAfeeLogo\"\r\n            className=\"Logo\"\r\n            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\r\n          />\r\n          <div className=\"Intro\">Create your McAfee account</div>\r\n          <div className=\"IntroSubHeading\">\r\n            <div className=\"Points\">\r\n              {translate(\r\n                \"Enter_your_email_address_set_password_and_well_get_your_account_created\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"BottomHeadingSignUp\">\r\n            {translate(\"Already have a account ?\")}\r\n            <p\r\n              className=\"page-link\"\r\n              onClick={() => {\r\n                setWhichPage(\"login-page\");\r\n              }}\r\n            >\r\n              Login\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"RightContainer\">\r\n          <Signup\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n            SignupForm={SignupForm}\r\n            onClick={onClick}\r\n            passwordRules={passwordRules}\r\n            PasswordPolicyState={PasswordPolicyState}\r\n            isValid={isValid}\r\n            SignupError={SignupError}\r\n          ></Signup>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupUI;\r\n","import React from \"react\";\r\nimport SignupContainer from \"../../containers/signupContainer\";\r\nimport SignupUI from \"./SignupUI\";\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <SignupContainer {...props}>\r\n      <SignupUI />\r\n    </SignupContainer>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React, { useState , useContext } from \"react\";\r\nimport translate from \"../../localization/translate\";\r\nimport { AiOutlineMail } from \"react-icons/ai\";\r\nimport { AccountContext } from \"../../providers/AccountContext\";\r\nimport \"./style.css\";\r\nfunction ForgotPasswordUI() {\r\n  const [emailDetails, updateEmailDetails] = useState({\r\n    email: \"\",\r\n    emailError: \"\",\r\n    databaseMessage: \"\",\r\n  });\r\n\r\n  const { sendForgotPasswordLink } = useContext(AccountContext);\r\n\r\n  const validateEmail = (email) => {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const onBlur = (emailVal) => {\r\n    if (!emailVal) {\r\n      updateEmailDetails((prevEmailDetails) => {\r\n        const updatedEmailDetails = { ...prevEmailDetails };\r\n        updatedEmailDetails.emailError = \"Email is required\";\r\n        return updatedEmailDetails;\r\n      });\r\n    } else if (emailVal && !validateEmail(emailVal)) {\r\n      updateEmailDetails((prevEmailDetails) => {\r\n        const updatedEmailDetails = { ...prevEmailDetails };\r\n        updatedEmailDetails.emailError = \"Email is not valid\";\r\n        return updatedEmailDetails;\r\n      });\r\n    } else {\r\n      updateEmailDetails((prevEmailDetails) => {\r\n        const updatedEmailDetails = { ...prevEmailDetails };\r\n        updatedEmailDetails.emailError = \"\";\r\n        return updatedEmailDetails;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    const emailVal = e.target.value;\r\n    updateEmailDetails((prevEmailDetails) => {\r\n      const updatedEmailDetails = { ...prevEmailDetails };\r\n      updatedEmailDetails.email = emailVal;\r\n      return updatedEmailDetails;\r\n    });\r\n    onBlur(emailVal);\r\n  };\r\n  const handleEmailMe = async(e) => {\r\n    e.preventDefault();\r\n    try\r\n    {\r\n      const res = await sendForgotPasswordLink(emailDetails.email)\r\n      updateEmailDetails((prevEmailDetails) => {\r\n        const updatedEmailDetails = { ...prevEmailDetails }\r\n        updatedEmailDetails.databaseMessage = res\r\n        return updatedEmailDetails\r\n      });\r\n    }catch(err){\r\n      console.log(err)\r\n      updateEmailDetails((prevEmailDetails) => {\r\n        const updatedEmailDetails = { ...prevEmailDetails }\r\n        updatedEmailDetails.databaseError = err.description\r\n        return updatedEmailDetails\r\n      });\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"ForgotPasswordContainer\">\r\n      <div className=\"ForgotPasswordLeftWrapper\">\r\n        <div className=\"LoginWelcomeContainer\">\r\n          <img\r\n            alt=\"McAfeeLogo\"\r\n            className=\"McAfeeLogo\"\r\n            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\r\n          />\r\n          <div className=\"ForgotPasswordIntro\">\r\n            Let's reset your password\r\n          </div>\r\n          <div className=\"ForgotPasswordIntroSubHeading\">\r\n            Enter the email you used to create your McAfee account and we’ll send you a link to reset your password.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ForgotPasswordRightWrapper\">\r\n        <div className=\"LoginInputContainer\">\r\n          {emailDetails.email !== \"\" ? (\r\n            <div className=\"LoginInputLabel\">{translate(\"emailAddress\")}</div>\r\n          ) : null}\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              border:\r\n                emailDetails.emailError !== \"\"\r\n                  ? \"2px solid red\"\r\n                  : emailDetails.emailError === \"\"\r\n                  ? \"2px solid green\"\r\n                  : \"\",\r\n              backgroundColor: \"#ffff\",\r\n              borderRadius: \"1rem\",\r\n            }}\r\n          >\r\n            <AiOutlineMail className=\"LoginInputLogo\" />\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={emailDetails.email}\r\n              placeholder=\"Email\"\r\n              className=\"LoginInput\"\r\n              onChange={handleEmailChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        {emailDetails.emailError !== \"\" && (\r\n          <div className=\"Error\">{emailDetails.emailError}</div>\r\n        )}\r\n        <div className=\"emailMeBtnWrapper\">\r\n          <button onClick={handleEmailMe} className=\"emailMeBtn\">\r\n            Email me\r\n          </button>\r\n        </div>\r\n        {emailDetails.databaseMessage !== \"\" && (\r\n          <div className=\"Error\">{emailDetails.databaseMessage}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordUI;\r\n","import React , {useContext,useState }from 'react'\r\nimport { MdLockOutline } from \"react-icons/md\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport Rules from \"../../utils/Rules\";\r\nimport { MdOutlineCancel } from \"react-icons/md\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { ReactComponent as TickIcon } from \"../../svg/tickIcon.svg\";\r\nimport translate from \"../../localization/translate\";\r\nimport { CommonDataContext } from \"../../providers/CommonDataContext\";\r\nimport { validatePassword } from \"../../validator/PasswordValidator\";\r\nimport './style.css'\r\n\r\nfunction ResetPasswordUi() {\r\n    const { connections } = useContext(CommonDataContext);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [displayRules, setDisplayRules] = useState(false);\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [passwordRules, setPasswordRules] = useState(null);\r\n    const [SignupForm, setSignupForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [PasswordPolicyState, setPasswordPolicyState] = useState({\r\n        No_more_than_2_identical_characters_in_a_row: false,\r\n        Special_characters: false,\r\n        Lower_case_Upper_Case_Numbers: false,\r\n        Length_Check: false,\r\n        Non_empty_Password_Required: false,\r\n    });\r\n    const [SignupError, setSignupError] = useState({\r\n        email: \"\",\r\n        isEmailError: \"\",\r\n        databaseError: \"\",\r\n        errorCode: \"\",\r\n    });\r\n    const onChange = (e) => {\r\n        if (e.target.name === \"password\" && passwordRules) {\r\n            validatePassword(\r\n                passwordRules,\r\n                e.target.value,\r\n                PasswordPolicyState,\r\n                setPasswordPolicyState,\r\n                setIsValid\r\n            );\r\n        }\r\n        setSignupForm({\r\n            ...SignupForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const ruleMap =\r\n        passwordRules &&\r\n        Rules({\r\n            count: passwordRules?.password_complexity_options?.min_length,\r\n        });\r\n    const displayablerule = [];\r\n    const getKeys = [];\r\n    if (passwordRules?.passwordPolicy === \"good\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (key !== \"No_more_than_2_identical_characters_in_a_row\") {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"excellent\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            getKeys.push(key);\r\n            displayablerule.push(ruleMap[key]);\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"fair\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (\r\n                key !== \"No_more_than_2_identical_characters_in_a_row\" ||\r\n                key !== \"Special_characters\"\r\n            ) {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === \"low\") {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (\r\n                key !== \"No_more_than_2_identical_characters_in_a_row\" ||\r\n                key !== \"Special_characters\" ||\r\n                key !== \"Lower_case_Upper_Case_Numbers\"\r\n            ) {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    } else if (passwordRules?.passwordPolicy === null) {\r\n        for (const key of Object.keys(PasswordPolicyState)) {\r\n            if (key === \"Non_empty_Password_Required\") {\r\n                getKeys.push(key);\r\n                displayablerule.push(ruleMap[key]);\r\n            }\r\n        }\r\n    }\r\n    const onClick = (e) => {\r\n        setPasswordRules(connections[0]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ForgotPasswordContainer\">\r\n      <div className=\"ForgotPasswordLeftWrapper\">\r\n        <div className=\"LoginWelcomeContainer\">\r\n          <img\r\n            alt=\"McAfeeLogo\"\r\n            className=\"McAfeeLogo\"\r\n            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\r\n          />\r\n          <div className=\"ForgotPasswordIntro\">\r\n            Reset Password\r\n          </div>\r\n          <div className=\"ForgotPasswordIntroSubHeading\">\r\n          Enter and confirm your new password for janedoe@gmail.com.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ForgotPasswordRightWrapper\">\r\n      <div className=\"formWrapper\">\r\n            <form className=\"InputWrapper\">\r\n            <>\r\n            <div>\r\n                        {SignupForm.password !== \"\" ? (\r\n                            <div\r\n                                className=\"InputLabelPass\"\r\n                                style={{\r\n                                    color: isValid\r\n                                        ? \"#0CA77D\"\r\n                                        : \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            >\r\n                                {translate(\"password\")}\r\n                            </div>\r\n                        ) : null}\r\n                        <div\r\n                            className=\"InputAndLogoSignup\"\r\n                            // style={{\r\n                            //   border:\r\n                            //     LoginError.isEmailError === true\r\n                            //       ? \"2px solid red\"\r\n                            //       : LoginError.isEmailError === false\r\n                            //       ? \"2px solid green\"\r\n                            //       : \"\",\r\n                            // }}\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    isValid ? \"#0CA77D\" : \"RGB(212, 213, 219)\"\r\n                                }`,\r\n                            }}\r\n                        >\r\n                            <MdLockOutline\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                value={SignupForm.password}\r\n                                placeholder=\"Password\"\r\n                                className=\"Input\"\r\n                                onChange={onChange}\r\n                                onFocus={() => {\r\n                                    onClick();\r\n                                    setDisplayRules(true);\r\n                                }}\r\n                                onBlur={() => setDisplayRules(false)}\r\n                            />\r\n                            <AiFillEye\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => {\r\n                                    showPassword\r\n                                        ? setShowPassword(false)\r\n                                        : setShowPassword(true);\r\n                                }}\r\n                            />\r\n                            {isValid ? (\r\n                                <TickIcon\r\n                                    style={{\r\n                                        height: \"2rem\",\r\n                                        width: \"2rem\",\r\n                                        marginTop: \"0.5rem\",\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {displayRules ? (\r\n                            <>\r\n                                <div className=\"Password-rules\">\r\n                                    {displayablerule.map((item, index) => {\r\n                                        return (\r\n                                            <div className=\"Rule\">\r\n                                                {\" \"}\r\n                                                <div className=\"checkbox\">\r\n                                                    {PasswordPolicyState[\r\n                                                        getKeys[index]\r\n                                                    ] ? (\r\n                                                        <TiTick className=\"tick\" />\r\n                                                    ) : (\r\n                                                        <MdOutlineCancel className=\"cancel\" />\r\n                                                    )}\r\n                                                </div>\r\n                                                {item}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            console.log(\"not going inside that\")\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        {SignupForm.confirmPassword !== \"\" ? (\r\n                            <div\r\n                                className=\"InputLabelCPass\"\r\n                                style={{\r\n                                    color:\r\n                                        SignupForm.password ===\r\n                                            SignupForm.confirmPassword &&\r\n                                        SignupForm.confirmPassword !== \"\"\r\n                                            ? \"#0CA77D\"\r\n                                            : \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            >\r\n                                {translate(\"confirm_password\")}\r\n                            </div>\r\n                        ) : null}\r\n                        <div\r\n                            className=\"InputAndLogoSignup\"\r\n                            // style={{\r\n                            //   border:\r\n                            //     LoginError.isEmailError === true\r\n                            //       ? \"2px solid red\"\r\n                            //       : LoginError.isEmailError === false\r\n                            //       ? \"2px solid green\"\r\n                            //       : \"\",\r\n                            // }}\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    SignupForm.password ===\r\n                                        SignupForm.confirmPassword &&\r\n                                    SignupForm.confirmPassword !== \"\"\r\n                                        ? \"#0CA77D\"\r\n                                        : \"RGB(212, 213, 219)\"\r\n                                }`,\r\n                            }}\r\n                        >\r\n                            <MdLockOutline\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.5rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"confirmPassword\"\r\n                                name=\"confirmPassword\"\r\n                                value={SignupForm.confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                                className=\"Input\"\r\n                                onChange={onChange}\r\n                                onBlur={() => setDisplayRules(false)}\r\n                            />\r\n                            <AiFillEye\r\n                                style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    marginTop: \"0.7rem\",\r\n                                    color: \"rgb(175, 174, 174)\",\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => {\r\n                                    showPassword\r\n                                        ? setShowPassword(false)\r\n                                        : setShowPassword(true);\r\n                                }}\r\n                            />\r\n                            {SignupForm.password ===\r\n                                SignupForm.confirmPassword &&\r\n                            SignupForm.confirmPassword !== \"\" ? (\r\n                                <TickIcon\r\n                                    style={{\r\n                                        height: \"2rem\",\r\n                                        width: \"2rem\",\r\n                                        marginTop: \"0.5rem\",\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                    {SignupError.errorCode && (\r\n                        <div className=\"Error\">\r\n                            {translate(SignupError.errorCode)}\r\n                        </div>\r\n                    )}\r\n                     </>\r\n            </form>\r\n        </div>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordUi\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"./providers/AppContext\";\r\nimport Login from \"./components/login/index\";\r\nimport Signup from \"./components/signup/index\";\r\nimport ForgotPasswordUI from \"./components/ForgotPassword/ForgotPasswordUI\";\r\nimport ResetPasswordUi from './components/ResetPassword/ResetPasswordUi'\r\n\r\nfunction Main() {\r\n  const { whichPage, setWhichPage } = useContext(AppContext);\r\n  const returnPage = (whichPage) => {\r\n    switch (whichPage) {\r\n      case \"signup-page\":\r\n        return <Signup setWhichPage={setWhichPage} />\r\n      case \"login-page\":\r\n        return <Login setWhichPage={setWhichPage} />\r\n      case \"forgotPassword-page\":\r\n        return <ForgotPasswordUI setWhichPage={setWhichPage} />\r\n      case \"resetPassword-page\" :\r\n          return <ResetPasswordUi/>\r\n      default:\r\n        return <Login setWhichPage={setWhichPage} />\r\n    }\r\n  };\r\n  return <div>{returnPage(whichPage)}</div>;\r\n}\r\n\r\nexport default Main;\r\n","export const LOCALES = {\r\n    ENGLISH: \"en-us\",\r\n    GERMAN: \"de-de\",\r\n    FRENCH: \"fr-ca\",\r\n};\r\n","import { LOCALES } from \"../constants\";\r\n\r\nconst en = {\r\n    [LOCALES.ENGLISH]: {\r\n        Welcome_back_to: \"Welcome back to\",\r\n        emailAddress: \"Email Address\",\r\n        password: \"Password\",\r\n        signIn: \"Sign in\",\r\n        choose_your_signIn_method_continue:\r\n            \"Choose your sign in method to continue\",\r\n        Enter_your_email_address_so_we_can_find_your_account:\r\n            \"Enter your email address so we can find your account.\",\r\n        or: \"or\",\r\n        signIn_with_password: \"Sign in with password\",\r\n        one_time_passcode: \"one-time passcode\",\r\n        Sign_in_with_a_onetime_passcode: \"Sign in with one-time passcode\",\r\n        continue: \"continue\",\r\n        access_denied: \"Wrong email or password.\",\r\n        too_many_attempts:\r\n            \" Your account has been blocked after multiple consecutive login attempts. We’ve sent you an email with instructions on how to unblock it.\",\r\n        Welcome_to_dashboard: \"Welcome to Dashboard\",\r\n        invalid_request:\r\n            \" Invalid request body. All and only of client_id, credential_type, username, otp, realm are required.\",\r\n        unauthorized_client: \"Cross origin login not allowed.\",\r\n        unsupported_credential_type: \" Unknown credential type parameter.\",\r\n        blocked_user: \"blocked user\",\r\n        password_leaked:\r\n            \"This login attempt has been blocked because the password you're using was previously disclosed through a data breach \",\r\n        or_Signin_with: \"or Sign in with:\",\r\n        Do_not_have_an_account: \"Don't have an Account ?\",\r\n        invalid_user_password: \"Wrong credentials.\",\r\n        invalid_captcha:\r\n            \"Solve the challenge question to verify you are not a robot.\",\r\n        invalid_recaptcha: \"Select the checkbox to verify you are not a robot.\",\r\n        Enter_your_email_address_set_password_and_well_get_your_account_created:\r\n            \"Enter your email address, set a password and we'll get your account created.\",\r\n        Already_have_a_account: \"Already have a account ?\",\r\n        confirm_password: \"Confirm Password\",\r\n        Request_one_time_passcode: \"Request one-time passcode\",\r\n    },\r\n};\r\nexport default en;\r\n","import { LOCALES } from \"../constants\";\r\n\r\nconst fr = {\r\n    [LOCALES.FRENCH]: {\r\n        Welcome_back_to: \"Bon retour à\",\r\n        emailAddress: \"Adresse e-mail\",\r\n        password: \"le mot de passe\",\r\n        signIn: \"s'identifier\",\r\n        choose_your_signIn_method_continue:\r\n            \"Choisissez votre méthode de connexion pour continuer\",\r\n        Enter_your_email_address_so_we_can_find_your_account:\r\n            \"Entrez votre adresse e-mail afin que nous puissions trouver votre compte.\",\r\n        Sign_in_with_a_onetime_passcode:\r\n            \"Connectez-vous avec un code d'accès à usage unique\",\r\n        or: \"ou\",\r\n        signIn_with_password: \"se connecter avec mot de passe\",\r\n        one_time_passcode: \"code d'accès à usage unique\",\r\n        continue: \"Continuez\",\r\n        access_denied: \"Mauvaise adresse de messagerie ou mot de passe.\",\r\n        too_many_attempts:\r\n            \"Votre compte a été bloqué après plusieurs tentatives de connexion consécutives. Nous vous avons envoyé un e-mail avec des instructions sur la façon de le débloquer\",\r\n        Welcome_to_dashboard: \"bienvenue au tableau de bord\",\r\n        invalid_request:\r\n            \"Corps de requête non valide. Tous et uniquement client_id, type d'identification, nom d'utilisateur, otp, domaine sont requis\",\r\n        unauthorized_client: \"Connexion d'origine croisée non autorisée.\",\r\n        unsupported_credential_typ: \"Paramètre de type d'identifiant inconnu.\",\r\n        blocked_user: \"utilisateur bloqué\",\r\n        password_leaked:\r\n            \"Cette tentative de connexion a été bloquée car le mot de passe que vous utilisez a déjà été divulgué suite à une violation de données\",\r\n        or_Signin_with: \"Ou connectez-vous avec :\",\r\n        Do_not_have_an_account: \"Vous n'avez pas de compte ?\",\r\n        invalid_user_password: \"Mauvais identifiants.\",\r\n        invalid_captcha:\r\n            \"RÃ©solvez la question du dÃ©fi pour vÃ©rifier que vous n'Ãªtes pas un robot.\",\r\n        invalid_recaptcha:\r\n            \"Cochez la case pour vÃ©rifier que vous n'Ãªtes pas un robot.\",\r\n        Enter_your_email_address_set_password_and_well_get_your_account_created:\r\n            \"Entrez votre adresse e-mail, définissez un mot de passe et nous créerons votre compte.\",\r\n        Already_have_a_account: \"Vous avez déjà un compte ?\",\r\n        confirm_password: \"Confirmez le mot de passe\",\r\n        Request_one_time_passcode: \"Demander un mot de passe à usage unique\",\r\n    },\r\n};\r\nexport default fr;\r\n","import en from \"./en-US\";\r\nimport fr from \"./fr-CA\";\r\n\r\nconst messages = {\r\n    ...en,\r\n    ...fr,\r\n};\r\nexport default messages;\r\n","import React, { Fragment } from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport messages from \"./messages\";\r\n\r\nconst LanguageProvider = ({ children, locale }) => (\r\n    <IntlProvider\r\n        textComponent={Fragment}\r\n        locale={locale}\r\n        messages={messages[locale]}\r\n    >\r\n        {children}\r\n    </IntlProvider>\r\n);\r\nexport default LanguageProvider;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../../providers/AppContext\";\r\nimport Main from '../../Main'\r\n\r\nfunction ResetPassword() {\r\n  const { setWhichPage } = useContext(AppContext);\r\n  useEffect(() => {\r\n    setWhichPage(\"resetPassword-page\");\r\n    console.log(\"IM SETTING RESET PAGE\")\r\n  }, []);\r\n  return <Main/>;\r\n}\r\n\r\nexport default ResetPassword;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useRef } from \"react\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\n\r\nimport Authorize from \"./components/Authorize\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport { AccountProvider } from \"./providers/AccountContext\";\r\nimport LanguageProvider from \"./localization/languageProvider\";\r\nimport { LOCALES } from \"./localization/constants\";\r\nimport { CommonDataProvider } from \"./providers/CommonDataContext\";\r\nimport ResetPassword from './components/ResetPassword/index'\r\n\r\nimport \"./app.css\";\r\nimport { AppProvider } from \"./providers/AppContext\";\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst App = ({ pageConfig }) => {\r\n    const parsedHash = new URLSearchParams(window.location.hash.substr(1));\r\n    if (useLocation().pathname === \"/login\") {\r\n        sessionStorage.setItem(\"params\", useLocation().search);\r\n    }\r\n\r\n    let query = useQuery();\r\n    let locale = useRef(\"\");\r\n    let lang;\r\n    let culture = query.get(\"culture\") ?? parsedHash.get(\"culture\");\r\n\r\n    if (culture === null) {\r\n        if (localStorage.getItem(\"lang\") === null) {\r\n            lang = \"en-us\";\r\n        } else {\r\n            lang = localStorage.getItem(\"lang\");\r\n        }\r\n    } else {\r\n        lang = culture;\r\n        localStorage.setItem(\"lang\", lang);\r\n    }\r\n\r\n    if (lang === \"en-us\") {\r\n        locale.current = LOCALES.ENGLISH;\r\n    } else if (lang === \"fr-ca\") {\r\n        locale.current = LOCALES.FRENCH;\r\n    } else {\r\n        locale.current = \"en-us\";\r\n    }\r\n\r\n    return (\r\n        <CommonDataProvider config={pageConfig}>\r\n            <AppProvider>\r\n                <LanguageProvider locale={locale.current}>\r\n                    <AccountProvider config={pageConfig}>\r\n                        <div id=\"app\" className=\"d-flex flex-column h-100\">\r\n                            <div className=\"container flex-grow-1\">\r\n                                <div className=\"mt-5\">\r\n                                    <Switch>\r\n                                        <Route\r\n                                            path=\"/login\"\r\n                                            exact\r\n                                            component={() => <Main />}\r\n                                        />\r\n                                         <Route\r\n                                            path=\"/reset\"\r\n                                            component={() => <ResetPassword />}\r\n                                        />\r\n                                        <Route exact path=\"/authorize\">\r\n                                            <Authorize config={pageConfig} />\r\n                                        </Route>\r\n                                    </Switch>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </AccountProvider>\r\n                </LanguageProvider>\r\n            </AppProvider>\r\n        </CommonDataProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nimport \"./index.css\";\r\n\r\n// window.LoginWidget = class LoginWidget {\r\n//     init(opts) {\r\n//         const pageConfig = opts.pageConfig;\r\n//         if (!pageConfig) {\r\n//             console.log(\"hello\");\r\n//             throw new Error(\"pageConfig must be provided in opts\");\r\n//         }\r\n//     }\r\n// };\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nwindow.LoginWidget = class LoginWidget {\r\n  init(opts) {\r\n    const pageConfig = opts.pageConfig;\r\n    if (!pageConfig) {\r\n      throw new Error(\"pageConfig must be provided in opts\");\r\n    }\r\n\r\n    ReactDOM.render(\r\n      <BrowserRouter>\r\n        <App pageConfig={pageConfig} />\r\n      </BrowserRouter>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n// ReactDOM.render(\r\n//   <BrowserRouter>\r\n//     <App pageConfig={{}} />\r\n//   </BrowserRouter>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\n// ReactDOM.render(\r\n//     <BrowserRouter>\r\n//         <App />\r\n//     </BrowserRouter>,\r\n//     document.getElementById(\"root\")\r\n// );\r\n"],"sourceRoot":""}